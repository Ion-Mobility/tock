//! Nested Vector Interrupt Controller (NVIC)

pub const DMA0_IRQn: u32 = 0;               /**< DMA channel 0 transfer complete */
pub const DMA1_IRQn: u32  = 1;               /**< DMA channel 1 transfer complete */
pub const DMA2_IRQn: u32  = 2;               /**< DMA channel 2 transfer complete */
pub const DMA3_IRQn: u32  = 3;               /**< DMA channel 3 transfer complete */
pub const DMA4_IRQn: u32  = 4;               /**< DMA channel 4 transfer complete */
pub const DMA5_IRQn: u32  = 5;               /**< DMA channel 5 transfer complete */
pub const DMA6_IRQn: u32  = 6;               /**< DMA channel 6 transfer complete */
pub const DMA7_IRQn: u32  = 7;               /**< DMA channel 7 transfer complete */
pub const DMA8_IRQn: u32  = 8;               /**< DMA channel 8 transfer complete */
pub const DMA9_IRQn: u32  = 9;               /**< DMA channel 9 transfer complete */
pub const DMA10_IRQn: u32 = 10;              /**< DMA channel 10 transfer complete */
pub const DMA11_IRQn: u32 = 11;              /**< DMA channel 11 transfer complete */
pub const DMA12_IRQn: u32 = 12;              /**< DMA channel 12 transfer complete */
pub const DMA13_IRQn: u32 = 13;              /**< DMA channel 13 transfer complete */
pub const DMA14_IRQn: u32 = 14;              /**< DMA channel 14 transfer complete */
pub const DMA15_IRQn: u32 = 15;              /**< DMA channel 15 transfer complete */
pub const DMA_Error_IRQn: u32 = 16;          /**< DMA error interrupt channels 0-15 */
pub const MCM_IRQn: u32   = 17;              /**< FPU sources */
pub const FTFC_IRQn: u32  = 18;              /**< FTFC Command complete */
pub const Read_Collision_IRQn: u32 = 19;     /**< FTFC Read collision */
pub const LVD_LVW_IRQn : u32 20;             /**< PMC Low voltage detect interrupt */
pub const FTFC_Fault_IRQn: u32 21;           /**< FTFC Double bit fault detect */
pub const WDOG_EWM_IRQn: u32 22;             /**< Single interrupt vector for WDOG and EWM */
pub const RCM_IRQn: u32   = 23;              /**< RCM Asynchronous Interrupt */
pub const LPI2C0_Master_IRQn: u32 = 24;      /**< LPI2C0 Master Interrupt */
pub const LPI2C0_Slave_IRQn: u32 = 25;       /**< LPI2C0 Slave Interrupt */
pub const LPSPI0_IRQn: u32= 26;              /**< LPSPI0 Interrupt */
pub const LPSPI1_IRQn: u32= 27;              /**< LPSPI1 Interrupt */
pub const LPSPI2_IRQn: u32= 28;              /**< LPSPI2 Interrupt */
pub const LPUART0_RxTx_IRQn: u32 = 31;       /**< LPUART0 Transmit / Receive Interrupt */
pub const LPUART1_RxTx_IRQn: u32 = 33;       /**< LPUART1 Transmit / Receive  Interrupt */
pub const LPUART2_RxTx_IRQn: u32 = 35;       /**< LPUART2 Transmit / Receive  Interrupt */
pub const ADC0_IRQn: u32  = 39;              /**< ADC0 interrupt request. */
pub const ADC1_IRQn: u32  = 40;              /**< ADC1 interrupt request. */
pub const CMP0_IRQn: u32  = 41;              /**< CMP0 interrupt request */
pub const ERM_single_fault_IRQn: u32 44;     /**< ERM single bit error correction */
pub const ERM_double_fault_IRQn: u32 45;     /**< ERM double bit error non-correctable */
pub const RTC_IRQn: u32   = 46;              /**< RTC alarm interrupt */
pub const RTC_Seconds_IRQn: u32 = 47;        /**< RTC seconds interrupt */
pub const LPIT0_Ch0_IRQn: u32 = 48;          /**< LPIT0 channel 0 overflow interrupt */
pub const LPIT0_Ch1_IRQn: u32 = 49;          /**< LPIT0 channel 1 overflow interrupt */
pub const LPIT0_Ch2_IRQn: u32 = 50;          /**< LPIT0 channel 2 overflow interrupt */
pub const LPIT0_Ch3_IRQn: u32 = 51;          /**< LPIT0 channel 3 overflow interrupt */
pub const PDB0_IRQn: u32  = 52;              /**< PDB0 interrupt */
pub const SCG_IRQn: u32   = 57;              /**< SCG bus interrupt request */
pub const LPTMR0_IRQn: u32= 58;              /**< LPTIMER interrupt request */
pub const PORTA_IRQn: u32 = 59;              /**< Port A pin detect interrupt */
pub const PORTB_IRQn: u32 = 60;              /**< Port B pin detect interrupt */
pub const PORTC_IRQn: u32 = 61;              /**< Port C pin detect interrupt */
pub const PORTD_IRQn: u32 = 62;              /**< Port D pin detect interrupt */
pub const PORTE_IRQn: u32 = 63;              /**< Port E pin detect interrupt */
pub const SWI_IRQn: u32   = 64;              /**< Software interrupt */
pub const PDB1_IRQn: u32  = 68;              /**< PDB1 interrupt */
pub const FLEXIO_IRQn: u32= 69;              /**< FlexIO Interrupt */
pub const CAN0_ORed_IRQn: u32 = 78;          /**< CAN0 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
pub const CAN0_Error_IRQn: u32 = 79;         /**< CAN0 Interrupt indicating that errors were detected on the CAN bus */
pub const CAN0_Wake_Up_IRQn: u32 = 80;       /**< CAN0 Interrupt asserted when Pretended Networking operation is enabled, and a valid message matches the selected filter criteria during Low Power mode */
pub const CAN0_ORed_0_15_MB_IRQn: u32 = 81;  /**< CAN0 OR'ed Message buffer (0-15) */
pub const CAN0_ORed_16_31_MB_IRQn: u32 = 82; /**< CAN0 OR'ed Message buffer (16-31) */
pub const CAN1_ORed_IRQn: u32 = 85;          /**< CAN1 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
pub const CAN1_Error_IRQn: u32 = 86;         /**< CAN1 Interrupt indicating that errors were detected on the CAN bus */
pub const CAN1_ORed_0_15_MB_IRQn: u32 = 88;  /**< CAN1 OR'ed Interrupt for Message buffer (0-15) */
pub const CAN2_ORed_IRQn: u32 = 92;          /**< CAN2 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
pub const CAN2_Error_IRQn: u32 = 93;         /**< CAN2 Interrupt indicating that errors were detected on the CAN bus */
pub const CAN2_ORed_0_15_MB_IRQn: u32 = 95;  /**< CAN2 OR'ed Message buffer (0-15) */
pub const FTM0_Ch0_Ch1_IRQn: u32 = 99;       /**< FTM0 Channel 0 and 1 interrupt */
pub const FTM0_Ch2_Ch3_IRQn: u32 = 100;      /**< FTM0 Channel 2 and 3 interrupt */
pub const FTM0_Ch4_Ch5_IRQn: u32 = 101;      /**< FTM0 Channel 4 and 5 interrupt */
pub const FTM0_Ch6_Ch7_IRQn: u32 = 102;      /**< FTM0 Channel 6 and 7 interrupt */
pub const FTM0_Fault_IRQn: u32 = 103;        /**< FTM0 Fault interrupt */
pub const FTM0_Ovf_Reload_IRQn: u32 = 104;   /**< FTM0 Counter overflow and Reload interrupt */
pub const FTM1_Ch0_Ch1_IRQn: u32 = 105;      /**< FTM1 Channel 0 and 1 interrupt */
pub const FTM1_Ch2_Ch3_IRQn: u32 = 106;      /**< FTM1 Channel 2 and 3 interrupt */
pub const FTM1_Ch4_Ch5_IRQn: u32 = 107;      /**< FTM1 Channel 4 and 5 interrupt */
pub const FTM1_Ch6_Ch7_IRQn: u32 = 108;      /**< FTM1 Channel 6 and 7 interrupt */
pub const FTM1_Fault_IRQn: u32 = 109;        /**< FTM1 Fault interrupt */
pub const FTM1_Ovf_Reload_IRQn: u32 = 110;   /**< FTM1 Counter overflow and Reload interrupt */
pub const FTM2_Ch0_Ch1_IRQn: u32 = 111;      /**< FTM2 Channel 0 and 1 interrupt */
pub const FTM2_Ch2_Ch3_IRQn: u32 = 112;      /**< FTM2 Channel 2 and 3 interrupt */
pub const FTM2_Ch4_Ch5_IRQn: u32 = 113;      /**< FTM2 Channel 4 and 5 interrupt */
pub const FTM2_Ch6_Ch7_IRQn: u32 = 114;      /**< FTM2 Channel 6 and 7 interrupt */
pub const FTM2_Fault_IRQn: u32 = 115;        /**< FTM2 Fault interrupt */
pub const FTM2_Ovf_Reload_IRQn: u32 = 116;   /**< FTM2 Counter overflow and Reload interrupt */
pub const FTM3_Ch0_Ch1_IRQn: u32 = 117;      /**< FTM3 Channel 0 and 1 interrupt */
pub const FTM3_Ch2_Ch3_IRQn: u32 = 118;      /**< FTM3 Channel 2 and 3 interrupt */
pub const FTM3_Ch4_Ch5_IRQn: u32 = 119;      /**< FTM3 Channel 4 and 5 interrupt */
pub const FTM3_Ch6_Ch7_IRQn: u32 = 120;      /**< FTM3 Channel 6 and 7 interrupt */
pub const FTM3_Fault_IRQn: u32 = 121;        /**< FTM3 Fault interrupt */
pub const FTM3_Ovf_Reload_IRQn: u32 = 122;   /**< FTM3 Counter overflow and Reload interrupt */